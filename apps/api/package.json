{
  "name": "@mirror/api",
  "version": "0.0.1",
  "repository": {
    "type": "git",
    "url": ""
  },
  "private": true,
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:dev:env": "dotenv -e .env.development -- npm run start:dev",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "NODE_ENV=test SMARTPROXY_SERVER=gate.smartproxy.com:10004 SMARTPROXY_PASSWORD=t8Nme1w5NkiHcoQ_g6 SMARTPROXY_USERNAME=spgkxtkgvc OPENAI_API_KEY=sk-proj-5Zn12HIZAgiaKTxGScYrT3BlbkFJWuvbVR3nJGvo8HWdDoqf NODE_OPTIONS='--experimental-vm-modules' jest",
    "test:watch": "NODE_ENV=test jest --watch",
    "test:cov": "NODE_ENV=test jest --coverage",
    "test:debug": "NODE_ENV=test node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "NODE_ENV=test jest --config ./test/jest-e2e.json",
    "prisma:generate": "npx prisma generate",
    "prisma:diff:generate": "dotenv -e .env -e .env.secrets -- prisma migrate diff --from-url \"mysql://zipper_user_staging:S90og93dC2v9e1y06@18.215.103.82:3306/zipper_staging\" --shadow-database-url \"mysql://zipper_user_staging_shadow:S90og93dC2v9e1y06@18.215.103.82:3306/zipper_staging_shadow\" --to-migrations ./prisma/migrations --script > backward.sql",
    "prisma:diff:execute": "dotenv -e .env -e .env.secrets -- prisma db execute --url \"mysql://zipper_user_staging:S90og93dC2v9e1y06@18.215.103.82:3306/zipper_staging\" --file backward.sql",
    "prisma:diff:resolve": "dotenv -e .env -e .env.secrets -- prisma migrate resolve --rolled-back 20240418132105_integrations_per_org_no_uniq",
    "migrate:dev": "dotenv -e .env -e .env.secrets -- prisma migrate dev --preview-feature",
    "migrate:dev:create": "dotenv -e .env -e .env.secrets -- prisma migrate dev --create-only --preview-feature",
    "migrate:deploy:dev": "dotenv -e .env -e .env.secrets -- npx prisma migrate deploy --preview-feature",
    "migrate:deploy:staging": "dotenv -e .env -e .env.secrets.staging -- npx prisma migrate deploy --preview-feature",
    "migrate:deploy:production": "dotenv -e .env -e .env.secrets.production -- npx prisma migrate deploy --preview-feature",
    "prepare:packageJson": "node ./scripts/prepare-package-json.js",
    "prepare:prisma": "rimraf server/node_modules/.prisma && cp -R node_modules/.prisma server/node_modules/.prisma && rimraf server/node_modules/.prisma/client/libquery_engine-debian-openssl-1.1.x.so.node",
    "prepare:prodmodules": "sh ./scripts/prepare-prod-modules.sh",
    "prepare:secrets": "node ./scripts/copy-secrets.js",
    "prisma:studio": "npx prisma studio",
    "openapi:generate": "rimraf ../../libs/api-client-typescript/src && dotenv -e .env -e .env.secrets -- ts-node ./src/openapi",
    "postinstall": "npm run prisma:generate",
    "build:prod": "rimraf server && npm run prisma:generate && tsc -p tsconfig.server.json && npm run prepare:packageJson && cd server && npm i -f && cd .. && npm run prepare:prisma && npm run prepare:prodmodules",
    "deploy": "npm run build:prod && npm run prepare:secrets -- --staging && arc deploy --no-hydrate --staging",
    "postdeploy": "node ./scripts/deploy-env-vars --staging",
    "deploy:production": "npm run build:prod && npm run prepare:secrets -- --production && arc deploy --no-hydrate --production",
    "postdeploy:production": "node ./scripts/deploy-env-vars --production"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.21.0",
    "@aws-sdk/client-lambda": "^3.624.0",
    "@aws-sdk/client-s3": "^3.626.0",
    "@nestjs/cache-manager": "^2.2.2",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.2",
    "@nestjs/core": "^10.0.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/swagger": "^7.3.1",
    "@prisma/client": "^5.13.0",
    "@types/cheerio": "^0.22.35",
    "@types/handlebars": "^4.1.0",
    "@vendia/serverless-express": "^4.12.6",
    "async-retry": "^1.3.3",
    "axios": "^1.6.8",
    "bottleneck": "^2.19.5",
    "cache-manager-redis-store": "^3.0.1",
    "cheerio": "^1.0.0-rc.12",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "dotenv": "^16.4.5",
    "google-it": "^1.6.4",
    "got-scraping": "^4.0.6",
    "handlebars": "^4.7.8",
    "helmet": "^7.1.0",
    "http-terminator": "^3.2.0",
    "json2csv": "^6.0.0-alpha.2",
    "json5": "^2.2.3",
    "lambda-warmer": "^2.0.1",
    "nestjs-graceful-shutdown": "^1.0.3",
    "openai": "^4.47.1",
    "p-retry": "^6.2.0",
    "prisma": "^5.13.0",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "swagger-ui-express": "^5.0.0"
  },
  "devDependencies": {
    "@architect/architect": "^11.1.0",
    "@architect/plugin-typescript": "^2.1.0",
    "@babel/core": "^7.24.5",
    "@babel/preset-env": "^7.24.5",
    "@jest/types": "^29.6.3",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/async-retry": "^1.4.8",
    "@types/aws-lambda": "^8.10.143",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.12",
    "@types/node": "^20.3.1",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "babel-jest": "^29.7.0",
    "dotenv-cli": "^7.4.2",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.2",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
